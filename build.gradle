plugins {
	id 'fabric-loom' version '1.5-SNAPSHOT'
	id 'maven-publish'
}

version = mod_version
group = mod_group
base { archivesName = mod_id }

repositories {
	maven {
		url "https://api.modrinth.com/maven"
		content { includeGroup "maven.modrinth" }
	}
	maven {
		url 'https://maven.ladysnake.org/releases'
		content { includeGroup "dev.onyxstudios.cardinal-components-api" }
	}
}

fabricApi {
	configureDataGeneration()
}


loom {
	splitEnvironmentSourceSets()
	accessWidenerPath = file("src/main/resources/nucleus.accesswidener")
	mixin {
		useLegacyMixinAp = false
	}
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
		compileClasspath += client.compileClasspath
		runtimeClasspath += client.runtimeClasspath
	}
}

loom {

//	mods {
//		"nucleus" {
//			sourceSet sourceSets.main
//			sourceSet sourceSets.client
//		}
//		"testmod" {
//			sourceSet sourceSets.test
//		}
//	}

	runs {
		client {
			name = "Test Client"
			source sourceSets.testmod
		}
		server {
			name = "Test Server"
			source sourceSets.testmod
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "net.fabricmc:yarn:${minecraft_version}+${yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
//	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}+${minecraft_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"

	include modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-base:${cardinal_components_version}")
	include modApi("dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${cardinal_components_version}")

//	modLocalRuntime "maven.modrinth:modmenu:${modmenu_version}"
//	modLocalRuntime "maven.modrinth:sodium:mc${minecraft_version}-${sodium_version}"
//	modLocalRuntime "maven.modrinth:chrysalis:${chrysalis_version}"

	testmodImplementation sourceSets.main.output
	testmodImplementation sourceSets.client.output
}

processResources {
	filesMatching("fabric.mod.json") {
		expand project.properties
	}
}

java {
	withSourcesJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}
tasks.build.finalizedBy publishToMavenLocal
